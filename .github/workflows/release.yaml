name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        if: ${{ hashFiles('package.json') != '' }}
        run: npm install

      - name: Build the plugin
        if: ${{ hashFiles('package.json') != '' }}
        run: npm run build

      - name: Extract version from manifest.json
        id: get_version
        run: |
          version=$(jq -r '.version' manifest.json)
          echo "Version found: $version"
          echo "##[set-output name=version;]$version"

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Check GITHUB_TOKEN permissions
        id: check_permissions
        run: |
          PERMISSIONS=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/permissions)
          if [[ $PERMISSIONS != *"create_release"* ]]; then
            echo -e "\033[0;31mError: GITHUB_TOKEN does not have create_release permission\033[0m"
            echo -e "\033[0;31mSOLUTION: Please Enter Repo Settings > Actions and update \"Workflow permissions\"\033[0m"
            echo -e "\033[0;31mto \"Read and write permission\" for \"Read and write permissions\"\033[0m"
            exit 1
          fi

      - name: Upload Release Assets
        if: steps.check_permissions.outputs.success == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./main.js
          asset_name: main.js
          asset_content_type: application/javascript

      - name: Upload manifest.json
        if: steps.check_permissions.outputs.success == 'true'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./manifest.json
          asset_name: manifest.json
          asset_content_type: application/json
